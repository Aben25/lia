You are an expert in TypeScript, Nose-Js, Next.Js Agp Rauter, React, Shaden UE,Radix UI, Supabase, and Tastains.Code Style and Structure


# Database Schema Documentation
# Database Schema Documentation

## Core Tables

### Users
```sql
CREATE TABLE users (
    id UUID PRIMARY KEY,
    email VARCHAR NOT NULL,
    role VARCHAR,
    is_super_admin BOOLEAN,
    is_sso_user BOOLEAN DEFAULT FALSE,
    is_anonymous BOOLEAN DEFAULT FALSE,
    -- Authentication fields
    encrypted_password VARCHAR,
    reset_password_token VARCHAR,
    reset_password_expiration TIMESTAMPTZ,
    confirmation_token VARCHAR,
    -- Metadata
    raw_app_meta_data JSONB,
    raw_user_meta_data JSONB,
    -- Timestamps
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now(),
    deleted_at TIMESTAMPTZ,
    -- Security
    login_attempts NUMERIC DEFAULT 0,
    lock_until TIMESTAMPTZ
);
```

### Sponsors
```sql
CREATE TABLE sponsors (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR NOT NULL,
    last_name VARCHAR NOT NULL,
    email VARCHAR,
    phone VARCHAR,
    -- Address information
    address VARCHAR,
    city VARCHAR,
    postal_code VARCHAR,
    country VARCHAR,
    region VARCHAR,
    -- Timestamps
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
);
```

### Sponsees
```sql
CREATE TABLE sponsees (
    id SERIAL PRIMARY KEY,
    full_name VARCHAR NOT NULL,
    date_of_birth TIMESTAMPTZ,
    Gender ENUM_TYPE,
    location VARCHAR,
    -- Profile information
    profile_picture_id INTEGER REFERENCES media(id),
    gallery_id INTEGER REFERENCES gallery(id),
    grade NUMERIC,
    education VARCHAR,
    aspiration VARCHAR,
    hobby VARCHAR,
    about VARCHAR,
    how_sponsorship_will_help VARCHAR,
    family VARCHAR,
    -- Program tracking
    joined_sponsorship_program TIMESTAMPTZ,
    -- Timestamps
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
);
```

## Media Management

### Media
```sql
CREATE TABLE media (
    id SERIAL PRIMARY KEY,
    filename VARCHAR NOT NULL,
    mime_type VARCHAR NOT NULL,
    size INTEGER,
    width INTEGER,
    height INTEGER,
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
);
```

### Gallery
```sql
CREATE TABLE gallery (
    id SERIAL PRIMARY KEY,
    sponsee_id INTEGER REFERENCES sponsees(id),
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
);
```

### Gallery Media
```sql
CREATE TABLE gallery_media (
    id VARCHAR PRIMARY KEY,
    _parent_id INTEGER REFERENCES gallery(id),
    image_id INTEGER REFERENCES media(id),
    video_id INTEGER REFERENCES media(id),
    caption VARCHAR,
    media_type ENUM ('image', 'video'),
    _order INTEGER
);
```

## Project Management

### Projects
```sql
CREATE TABLE projects (
    id SERIAL PRIMARY KEY,
    title VARCHAR NOT NULL,
    description TEXT,
    sponsee_id INTEGER REFERENCES sponsees(id),
    status VARCHAR,
    created_at TIMESTAMPTZ DEFAULT now(),
    updated_at TIMESTAMPTZ DEFAULT now()
);
```

### Projects Status
```sql
CREATE TABLE projects_status (
    id SERIAL PRIMARY KEY,
    project_id INTEGER REFERENCES projects(id),
    status VARCHAR NOT NULL,
    notes TEXT,
    created_at TIMESTAMPTZ DEFAULT now()
);
```

### Projects Documents
```sql
CREATE TABLE projects_documents (
    id SERIAL PRIMARY KEY,
    project_id INTEGER REFERENCES projects(id),
    document_id INTEGER REFERENCES documents(id)
);
```

## Financial Management

### Donation Collection
```sql
CREATE TABLE donation_collection (
    id SERIAL PRIMARY KEY,
    sponsor_id INTEGER REFERENCES sponsors(id),
    amount DECIMAL NOT NULL,
    currency VARCHAR NOT NULL,
    status VARCHAR,
    transaction_date TIMESTAMPTZ,
    created_at TIMESTAMPTZ DEFAULT now()
);
```

### Donation Distribution
```sql
CREATE TABLE donation_distribution (
    id SERIAL PRIMARY KEY,
    donation_id INTEGER REFERENCES donation_collection(id),
    sponsee_id INTEGER REFERENCES sponsees(id),
    amount DECIMAL NOT NULL,
    distribution_date TIMESTAMPTZ,
    status VARCHAR,
    created_at TIMESTAMPTZ DEFAULT now()
);
```

## Key Relationships

### Sponsor-Sponsee Relationship
- One sponsor can sponsor multiple sponsees (`sponsors_rels` table)
- One sponsee can have multiple sponsors (many-to-many relationship)
```sql
CREATE TABLE sponsors_rels (
    id SERIAL PRIMARY KEY,
    parent_id INTEGER REFERENCES sponsors(id),
    sponsees_id INTEGER REFERENCES sponsees(id),
    _order INTEGER,
    path VARCHAR NOT NULL
);
```

### Media Relationships
1. Sponsee Profile Picture:
   - One-to-one relationship with media through `profile_picture_id`
2. Sponsee Gallery:
   - One-to-one relationship with gallery through `gallery_id`
   - Gallery can have multiple media items through `gallery_media`

### Project Relationships
1. Project-Sponsee:
   - One sponsee can have multiple projects
   - Each project belongs to one sponsee
2. Project Documentation:
   - Projects can have multiple documents
   - Documents are tracked through `projects_documents`

### Financial Relationships
1. Donation Flow:
   - Sponsor makes donation (`donation_collection`)
   - Donations are distributed to sponsees (`donation_distribution`)
2. Tracking:
   - Each donation is linked to a sponsor
   - Distribution records link donations to sponsees

## Foreign Key Relationships

### Sponsees Table
```sql
ALTER TABLE sponsees
    ADD CONSTRAINT fk_profile_picture
    FOREIGN KEY (profile_picture_id) REFERENCES media(id),
    ADD CONSTRAINT fk_gallery
    FOREIGN KEY (gallery_id) REFERENCES gallery(id);
```

### Gallery Media Table
```sql
ALTER TABLE gallery_media
    ADD CONSTRAINT fk_gallery
    FOREIGN KEY (_parent_id) REFERENCES gallery(id),
    ADD CONSTRAINT fk_image
    FOREIGN KEY (image_id) REFERENCES media(id),
    ADD CONSTRAINT fk_video
    FOREIGN KEY (video_id) REFERENCES media(id);
```

### Projects Table
```sql
ALTER TABLE projects
    ADD CONSTRAINT fk_sponsee
    FOREIGN KEY (sponsee_id) REFERENCES sponsees(id);
```

### Donation Tables
```sql
ALTER TABLE donation_collection
    ADD CONSTRAINT fk_sponsor
    FOREIGN KEY (sponsor_id) REFERENCES sponsors(id);

ALTER TABLE donation_distribution
    ADD CONSTRAINT fk_donation
    FOREIGN KEY (donation_id) REFERENCES donation_collection(id),
    ADD CONSTRAINT fk_sponsee
    FOREIGN KEY (sponsee_id) REFERENCES sponsees(id);
```

## Notes for Developers

1. **Timestamps**
   - Most tables include `created_at` and `updated_at`
   - Use triggers to automatically update `updated_at`

2. **Soft Deletion**
   - Implemented through `deleted_at` timestamp
   - Queries should include `WHERE deleted_at IS NULL`

3. **Indexing**
   - Foreign keys are automatically indexed
   - Consider additional indexes for frequently queried fields

4. **Enums**
   - Used for fixed value sets (e.g., Gender, media_type)
   - Consider adding check constraints for other restricted values

5. **Security**
   - User authentication handled through users table
   - Document access controlled via payload_locked_documents

6. **Media Storage**
   - Media files stored in Supabase storage
   - Media table contains metadata only
   - URLs constructed using: `https://<project>.supabase.co/storage/v1/object/public/media/{image_id}/{filename}`